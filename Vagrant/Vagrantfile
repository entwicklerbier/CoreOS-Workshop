# -*- mode: ruby -*-
# # vi: set ft=ruby :

Vagrant.require_version ">= 1.6.0"

require 'fileutils'

CLOUD_CONFIG_PATH = File.join(File.dirname(__FILE__), "cloud-config")

num_instances = 1
ram_per_instance = 1024
num_cpus = 2

if ENV['NUM_INSTANCES'] && ENV['NUM_INSTANCES'].to_i > 0
  num_instances = ENV['NUM_INSTANCES'].to_i
end


if ENV['NUM_CPUS'] && ENV['NUM_CPUS'].to_i > 0
  num_cpus = ENV['NUM_CPUS'].to_i
end

if !ENV['START_IP']
  p 'You have to set START_IP env'
  exit
end

if ENV['RAM_PER_INSTANCE'] && ENV['RAM_PER_INSTANCE'].to_i
  ram_per_instance = ENV['RAM_PER_INSTANCE'].to_i
end

start_ip = ENV['START_IP'].to_i

Vagrant.configure("2") do |config|
  config.vm.box = "coreos-beta"
  config.vm.box_url = "http://coreos.ws.tld/coreos_production_vagrant.json"

  # plugin conflict
  if Vagrant.has_plugin?("vagrant-vbguest") then
    config.vbguest.auto_update = false
  end

  (1..num_instances).each do |i|
    vm_name = "core-%02d" % i
    config.vm.define(vm_name) do |config|
      config.vm.hostname = vm_name

      config.vm.provider "virtualbox" do |v|
        v.memory = ram_per_instance
        v.cpus = num_cpus
      end

      config.vm.provider "kvm" do |v|
        v.memory = ram_per_instance
        v.cpus = num_cpus
      end

      ip = "10.0.0.#{i+start_ip}"
      config.vm.network  "public_network", ip: ip, bridge: 'en0: Ethernet'

      p "CoreOS Machine with IP: #{ip}"

      if File.exist?(CLOUD_CONFIG_PATH)
        config.vm.provision :file, source: "#{CLOUD_CONFIG_PATH}", destination: "/tmp/vagrantfile-user-data"
        config.vm.provision :shell, inline:
          "sed -i 's/{{ hostname }}/#{vm_name}/g' /tmp/vagrantfile-user-data;"+
          "mv /tmp/vagrantfile-user-data /var/lib/coreos-vagrant/vagrantfile-user-data", privileged: true
      end

    end
  end
end
